{"kind":"FETCH","data":{"headers":{"alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-encoding":"gzip","content-type":"application/json; charset=utf-8","date":"Thu, 05 Oct 2023 20:45:24 GMT","ratelimit-limit":"500","ratelimit-remaining":"498","ratelimit-reset":"1","server-timing":"api;dur=24","strict-transport-security":"max-age=15724800; includeSubDomains","transfer-encoding":"chunked","vary":"Accept-Encoding, origin","via":"1.1 google","x-ratelimit-limit-second":"500","x-ratelimit-remaining-second":"498","x-sanity-shard":"gcp-eu-w1-01-prod-1036","x-served-by":"gradient-query-796dd6f678-ncf7t","xkey":"yhcu3nao-preview, yhcu3nao, project-yhcu3nao, project-yhcu3nao-preview"},"body":"","status":200,"url":"https://yhcu3nao.api.sanity.io/v2022-11-15/data/query/preview?query=%0A%7B%0A++%22post%22%3A+*%5B_type+%3D%3D+%22post%22+%26%26+slug.current+%3D%3D+%24slug%5D+%7C+order%28_updatedAt+desc%29+%5B0%5D+%7B%0A++++content%2C%0A++++%0A++_id%2C%0A++title%2C%0A++date%2C%0A++_updatedAt%2C%0A++excerpt%2C%0A++coverImage%2C%0A++%22slug%22%3A+slug.current%2C%0A++%22author%22%3A+author-%3E%7Bname%2C+picture%7D%2C%0A%0A++%7D%2C%0A++%22morePosts%22%3A+*%5B_type+%3D%3D+%22post%22+%26%26+slug.current+%21%3D+%24slug%5D+%7C+order%28date+desc%2C+_updatedAt+desc%29+%5B0...2%5D+%7B%0A++++content%2C%0A++++%0A++_id%2C%0A++title%2C%0A++date%2C%0A++_updatedAt%2C%0A++excerpt%2C%0A++coverImage%2C%0A++%22slug%22%3A+slug.current%2C%0A++%22author%22%3A+author-%3E%7Bname%2C+picture%7D%2C%0A%0A++%7D%0A%7D&%24slug=%22lorem-ipsum%22&perspective=published"},"revalidate":31536000,"tags":[]}