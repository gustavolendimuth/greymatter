"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/suspend-react";
exports.ids = ["vendor-chunks/suspend-react"];
exports.modules = {

/***/ "(ssr)/./node_modules/suspend-react/dist/index.cjs.js":
/*!******************************************************!*\
  !*** ./node_modules/suspend-react/dist/index.cjs.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nconst globalCache = [];\n\nfunction query(fn, keys, preload = false, config = {}) {\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) return entry.response; // If the promise is still unresolved, throw\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    promise: // Execute the promise\n    fn(...keys) // When it resolves, store its value\n    .then(response => entry.response = response) // Remove the entry if a lifespan was given\n    .then(() => {\n      if (config.lifespan && config.lifespan > 0) {\n        setTimeout(() => {\n          const index = globalCache.indexOf(entry);\n          if (index !== -1) globalCache.splice(index, 1);\n        }, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n\n    if (entry) {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    }\n  }\n};\n\nexports.clear = clear;\nexports.peek = peek;\nexports.preload = preload;\nexports.suspend = suspend;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3VzcGVuZC1yZWFjdC9kaXN0L2luZGV4LmNqcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLFNBQVM7O0FBRTNCO0FBQ0E7O0FBRUE7O0FBRUEscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDOztBQUVyQyxtRkFBbUY7O0FBRW5GLDBGQUEwRjs7QUFFMUY7QUFDQTtBQUNBLElBQUk7OztBQUdKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLOztBQUVMLDJCQUEyQjs7QUFFM0I7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLHlGQUF5RjtBQUN6Rjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiLFlBQVk7QUFDWixlQUFlO0FBQ2YsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2dyZXltYXR0ZXItdjIvLi9ub2RlX21vZHVsZXMvc3VzcGVuZC1yZWFjdC9kaXN0L2luZGV4LmNqcy5qcz80YmUxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxuZnVuY3Rpb24gc2hhbGxvd0VxdWFsQXJyYXlzKGFyckEsIGFyckIsIGVxdWFsID0gKGEsIGIpID0+IGEgPT09IGIpIHtcbiAgaWYgKGFyckEgPT09IGFyckIpIHJldHVybiB0cnVlO1xuICBpZiAoIWFyckEgfHwgIWFyckIpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgbGVuID0gYXJyQS5sZW5ndGg7XG4gIGlmIChhcnJCLmxlbmd0aCAhPT0gbGVuKSByZXR1cm4gZmFsc2U7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykgaWYgKCFlcXVhbChhcnJBW2ldLCBhcnJCW2ldKSkgcmV0dXJuIGZhbHNlO1xuXG4gIHJldHVybiB0cnVlO1xufVxuXG5jb25zdCBnbG9iYWxDYWNoZSA9IFtdO1xuXG5mdW5jdGlvbiBxdWVyeShmbiwga2V5cywgcHJlbG9hZCA9IGZhbHNlLCBjb25maWcgPSB7fSkge1xuICBmb3IgKGNvbnN0IGVudHJ5IG9mIGdsb2JhbENhY2hlKSB7XG4gICAgLy8gRmluZCBhIG1hdGNoXG4gICAgaWYgKHNoYWxsb3dFcXVhbEFycmF5cyhrZXlzLCBlbnRyeS5rZXlzLCBlbnRyeS5lcXVhbCkpIHtcbiAgICAgIC8vIElmIHdlJ3JlIHByZS1sb2FkaW5nIGFuZCB0aGUgZWxlbWVudCBpcyBwcmVzZW50LCBqdXN0IHJldHVyblxuICAgICAgaWYgKHByZWxvYWQpIHJldHVybiB1bmRlZmluZWQ7IC8vIElmIGFuIGVycm9yIG9jY3VycmVkLCB0aHJvd1xuXG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGVudHJ5LCAnZXJyb3InKSkgdGhyb3cgZW50cnkuZXJyb3I7IC8vIElmIGEgcmVzcG9uc2Ugd2FzIHN1Y2Nlc3NmdWwsIHJldHVyblxuXG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGVudHJ5LCAncmVzcG9uc2UnKSkgcmV0dXJuIGVudHJ5LnJlc3BvbnNlOyAvLyBJZiB0aGUgcHJvbWlzZSBpcyBzdGlsbCB1bnJlc29sdmVkLCB0aHJvd1xuXG4gICAgICBpZiAoIXByZWxvYWQpIHRocm93IGVudHJ5LnByb21pc2U7XG4gICAgfVxuICB9IC8vIFRoZSByZXF1ZXN0IGlzIG5ldyBvciBoYXMgY2hhbmdlZC5cblxuXG4gIGNvbnN0IGVudHJ5ID0ge1xuICAgIGtleXMsXG4gICAgZXF1YWw6IGNvbmZpZy5lcXVhbCxcbiAgICBwcm9taXNlOiAvLyBFeGVjdXRlIHRoZSBwcm9taXNlXG4gICAgZm4oLi4ua2V5cykgLy8gV2hlbiBpdCByZXNvbHZlcywgc3RvcmUgaXRzIHZhbHVlXG4gICAgLnRoZW4ocmVzcG9uc2UgPT4gZW50cnkucmVzcG9uc2UgPSByZXNwb25zZSkgLy8gUmVtb3ZlIHRoZSBlbnRyeSBpZiBhIGxpZmVzcGFuIHdhcyBnaXZlblxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIGlmIChjb25maWcubGlmZXNwYW4gJiYgY29uZmlnLmxpZmVzcGFuID4gMCkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBjb25zdCBpbmRleCA9IGdsb2JhbENhY2hlLmluZGV4T2YoZW50cnkpO1xuICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIGdsb2JhbENhY2hlLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIH0sIGNvbmZpZy5saWZlc3Bhbik7XG4gICAgICB9XG4gICAgfSkgLy8gU3RvcmUgY2F1Z2h0IGVycm9ycywgdGhleSB3aWxsIGJlIHRocm93biBpbiB0aGUgcmVuZGVyLXBoYXNlIHRvIGJ1YmJsZSBpbnRvIGFuIGVycm9yLWJvdW5kXG4gICAgLmNhdGNoKGVycm9yID0+IGVudHJ5LmVycm9yID0gZXJyb3IpXG4gIH07IC8vIFJlZ2lzdGVyIHRoZSBlbnRyeVxuXG4gIGdsb2JhbENhY2hlLnB1c2goZW50cnkpOyAvLyBBbmQgdGhyb3cgdGhlIHByb21pc2UsIHRoaXMgeWllbGRzIGNvbnRyb2wgYmFjayB0byBSZWFjdFxuXG4gIGlmICghcHJlbG9hZCkgdGhyb3cgZW50cnkucHJvbWlzZTtcbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuY29uc3Qgc3VzcGVuZCA9IChmbiwga2V5cywgY29uZmlnKSA9PiBxdWVyeShmbiwga2V5cywgZmFsc2UsIGNvbmZpZyk7XG5cbmNvbnN0IHByZWxvYWQgPSAoZm4sIGtleXMsIGNvbmZpZykgPT4gdm9pZCBxdWVyeShmbiwga2V5cywgdHJ1ZSwgY29uZmlnKTtcblxuY29uc3QgcGVlayA9IGtleXMgPT4ge1xuICB2YXIgX2dsb2JhbENhY2hlJGZpbmQ7XG5cbiAgcmV0dXJuIChfZ2xvYmFsQ2FjaGUkZmluZCA9IGdsb2JhbENhY2hlLmZpbmQoZW50cnkgPT4gc2hhbGxvd0VxdWFsQXJyYXlzKGtleXMsIGVudHJ5LmtleXMsIGVudHJ5LmVxdWFsKSkpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsQ2FjaGUkZmluZC5yZXNwb25zZTtcbn07XG5cbmNvbnN0IGNsZWFyID0ga2V5cyA9PiB7XG4gIGlmIChrZXlzID09PSB1bmRlZmluZWQgfHwga2V5cy5sZW5ndGggPT09IDApIGdsb2JhbENhY2hlLnNwbGljZSgwLCBnbG9iYWxDYWNoZS5sZW5ndGgpO2Vsc2Uge1xuICAgIGNvbnN0IGVudHJ5ID0gZ2xvYmFsQ2FjaGUuZmluZChlbnRyeSA9PiBzaGFsbG93RXF1YWxBcnJheXMoa2V5cywgZW50cnkua2V5cywgZW50cnkuZXF1YWwpKTtcblxuICAgIGlmIChlbnRyeSkge1xuICAgICAgY29uc3QgaW5kZXggPSBnbG9iYWxDYWNoZS5pbmRleE9mKGVudHJ5KTtcbiAgICAgIGlmIChpbmRleCAhPT0gLTEpIGdsb2JhbENhY2hlLnNwbGljZShpbmRleCwgMSk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnRzLmNsZWFyID0gY2xlYXI7XG5leHBvcnRzLnBlZWsgPSBwZWVrO1xuZXhwb3J0cy5wcmVsb2FkID0gcHJlbG9hZDtcbmV4cG9ydHMuc3VzcGVuZCA9IHN1c3BlbmQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/suspend-react/dist/index.cjs.js\n");

/***/ })

};
;