/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/css-background-parser";
exports.ids = ["vendor-chunks/css-background-parser"];
exports.modules = {

/***/ "(ssr)/./node_modules/css-background-parser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-background-parser/index.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("/*!\n * https://github.com/gilmoreorless/css-background-parser\n * Copyright Â© 2015 Gilmore Davidson under the MIT license: http://gilmoreorless.mit-license.org/\n */\n(function (exports) {\n\n    function BackgroundList(backgrounds) {\n        if (!(this instanceof BackgroundList)) {\n            return new BackgroundList();\n        }\n        this.backgrounds = backgrounds || [];\n    }\n\n    BackgroundList.prototype.toString = function () {\n        return this.backgrounds.join(', ');\n    };\n\n\n    function Background(props) {\n        if (!(this instanceof Background)) {\n            return new Background(props);\n        }\n        props = props || {};\n        var bg = this;\n\n        function defprop(name, defaultValue) {\n            bg[name] = (name in props) ? props[name] : defaultValue;\n        }\n\n        // http://www.w3.org/TR/css3-background/#backgrounds\n        defprop('color', '');\n        defprop('image', 'none');\n        defprop('attachment', 'scroll');\n        defprop('clip', 'border-box');\n        defprop('origin', 'padding-box');\n        defprop('position', '0% 0%');\n        defprop('repeat', 'repeat');\n        defprop('size', 'auto');\n    }\n\n    Background.prototype.toString = function () {\n        var list = [\n            this.image,\n            this.repeat,\n            this.attachment,\n            this.position + ' / ' + this.size,\n            this.origin,\n            this.clip\n        ];\n        if (this.color) {\n            list.unshift(this.color);\n        }\n        return list.join(' ');\n    };\n\n    exports.BackgroundList = BackgroundList;\n    exports.Background = Background;\n\n\n    function parseImages(cssText) {\n        var images = [];\n        var tokens = /[,\\(\\)]/;\n        var parens = 0;\n        var buffer = '';\n\n        if (cssText == null) {\n            return images;\n        }\n\n        while (cssText.length) {\n            var match = tokens.exec(cssText);\n            if (!match) {\n                break;\n            }\n            var char = match[0];\n            var ignoreChar = false;\n            switch (char) {\n                case ',':\n                    if (!parens) {\n                        images.push(buffer.trim());\n                        buffer = '';\n                        ignoreChar = true;\n                    }\n                    break;\n                case '(':\n                    parens++;\n                    break;\n                case ')':\n                    parens--;\n                    break;\n            }\n\n            var index = match.index + 1;\n            buffer += cssText.slice(0, ignoreChar ? index - 1 : index);\n            cssText = cssText.slice(index);\n        }\n\n        if (buffer.length || cssText.length) {\n            images.push((buffer + cssText).trim());\n        }\n\n        return images;\n    }\n\n    // Helper for .map()\n    function trim(str) {\n        return str.trim();\n    }\n\n    function parseSimpleList(cssText) {\n        return (cssText || '').split(',').map(trim);\n    }\n\n    exports.parseElementStyle = function (styleObject) {\n        var list = new BackgroundList();\n        if (styleObject == null) {\n            return list;\n        }\n\n        var bgImage = parseImages(styleObject.backgroundImage);\n        var bgColor = styleObject.backgroundColor;\n        var bgAttachment = parseSimpleList(styleObject.backgroundAttachment);\n        var bgClip       = parseSimpleList(styleObject.backgroundClip);\n        var bgOrigin     = parseSimpleList(styleObject.backgroundOrigin);\n        var bgPosition   = parseSimpleList(styleObject.backgroundPosition);\n        var bgRepeat     = parseSimpleList(styleObject.backgroundRepeat);\n        var bgSize       = parseSimpleList(styleObject.backgroundSize);\n        var background;\n\n        for (var i = 0, ii = bgImage.length; i < ii; i++) {\n            background = new Background({\n                image:      bgImage[i],\n                attachment: bgAttachment[i % bgAttachment.length],\n                clip:       bgClip[i % bgClip.length],\n                origin:     bgOrigin[i % bgOrigin.length],\n                position:   bgPosition[i % bgPosition.length],\n                repeat:     bgRepeat[i % bgRepeat.length],\n                size:       bgSize[i % bgSize.length]\n            });\n            if (i === ii - 1) {\n                background.color = bgColor;\n            }\n            list.backgrounds.push(background);\n        }\n\n        return list;\n    };\n\n    // exports.parseCssString = function (cssString) {\n    //     return new Background();\n    // };\n\n    // exports.parseBackgroundValue = function (cssString) {\n    //     return new Background();\n    // };\n\n})((function (root) {\n    // CommonJS\n    if ( true && module.exports !== undefined) return module.exports;\n    // Global `cssBgParser`\n    return (root.cssBgParser = {});\n})(this));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY3NzLWJhY2tncm91bmQtcGFyc2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2Q0FBNkMsUUFBUTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLENBQUM7QUFDRDtBQUNBLFFBQVEsS0FBNkI7QUFDckM7QUFDQSxpQ0FBaUM7QUFDakMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyZXltYXR0ZXItdjIvLi9ub2RlX21vZHVsZXMvY3NzLWJhY2tncm91bmQtcGFyc2VyL2luZGV4LmpzP2FhZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZ2lsbW9yZW9ybGVzcy9jc3MtYmFja2dyb3VuZC1wYXJzZXJcbiAqIENvcHlyaWdodCDCqSAyMDE1IEdpbG1vcmUgRGF2aWRzb24gdW5kZXIgdGhlIE1JVCBsaWNlbnNlOiBodHRwOi8vZ2lsbW9yZW9ybGVzcy5taXQtbGljZW5zZS5vcmcvXG4gKi9cbihmdW5jdGlvbiAoZXhwb3J0cykge1xuXG4gICAgZnVuY3Rpb24gQmFja2dyb3VuZExpc3QoYmFja2dyb3VuZHMpIHtcbiAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEJhY2tncm91bmRMaXN0KSkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBCYWNrZ3JvdW5kTGlzdCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZHMgPSBiYWNrZ3JvdW5kcyB8fCBbXTtcbiAgICB9XG5cbiAgICBCYWNrZ3JvdW5kTGlzdC5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJhY2tncm91bmRzLmpvaW4oJywgJyk7XG4gICAgfTtcblxuXG4gICAgZnVuY3Rpb24gQmFja2dyb3VuZChwcm9wcykge1xuICAgICAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQmFja2dyb3VuZCkpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQmFja2dyb3VuZChwcm9wcyk7XG4gICAgICAgIH1cbiAgICAgICAgcHJvcHMgPSBwcm9wcyB8fCB7fTtcbiAgICAgICAgdmFyIGJnID0gdGhpcztcblxuICAgICAgICBmdW5jdGlvbiBkZWZwcm9wKG5hbWUsIGRlZmF1bHRWYWx1ZSkge1xuICAgICAgICAgICAgYmdbbmFtZV0gPSAobmFtZSBpbiBwcm9wcykgPyBwcm9wc1tuYW1lXSA6IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtYmFja2dyb3VuZC8jYmFja2dyb3VuZHNcbiAgICAgICAgZGVmcHJvcCgnY29sb3InLCAnJyk7XG4gICAgICAgIGRlZnByb3AoJ2ltYWdlJywgJ25vbmUnKTtcbiAgICAgICAgZGVmcHJvcCgnYXR0YWNobWVudCcsICdzY3JvbGwnKTtcbiAgICAgICAgZGVmcHJvcCgnY2xpcCcsICdib3JkZXItYm94Jyk7XG4gICAgICAgIGRlZnByb3AoJ29yaWdpbicsICdwYWRkaW5nLWJveCcpO1xuICAgICAgICBkZWZwcm9wKCdwb3NpdGlvbicsICcwJSAwJScpO1xuICAgICAgICBkZWZwcm9wKCdyZXBlYXQnLCAncmVwZWF0Jyk7XG4gICAgICAgIGRlZnByb3AoJ3NpemUnLCAnYXV0bycpO1xuICAgIH1cblxuICAgIEJhY2tncm91bmQucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbGlzdCA9IFtcbiAgICAgICAgICAgIHRoaXMuaW1hZ2UsXG4gICAgICAgICAgICB0aGlzLnJlcGVhdCxcbiAgICAgICAgICAgIHRoaXMuYXR0YWNobWVudCxcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb24gKyAnIC8gJyArIHRoaXMuc2l6ZSxcbiAgICAgICAgICAgIHRoaXMub3JpZ2luLFxuICAgICAgICAgICAgdGhpcy5jbGlwXG4gICAgICAgIF07XG4gICAgICAgIGlmICh0aGlzLmNvbG9yKSB7XG4gICAgICAgICAgICBsaXN0LnVuc2hpZnQodGhpcy5jb2xvcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3Quam9pbignICcpO1xuICAgIH07XG5cbiAgICBleHBvcnRzLkJhY2tncm91bmRMaXN0ID0gQmFja2dyb3VuZExpc3Q7XG4gICAgZXhwb3J0cy5CYWNrZ3JvdW5kID0gQmFja2dyb3VuZDtcblxuXG4gICAgZnVuY3Rpb24gcGFyc2VJbWFnZXMoY3NzVGV4dCkge1xuICAgICAgICB2YXIgaW1hZ2VzID0gW107XG4gICAgICAgIHZhciB0b2tlbnMgPSAvWyxcXChcXCldLztcbiAgICAgICAgdmFyIHBhcmVucyA9IDA7XG4gICAgICAgIHZhciBidWZmZXIgPSAnJztcblxuICAgICAgICBpZiAoY3NzVGV4dCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gaW1hZ2VzO1xuICAgICAgICB9XG5cbiAgICAgICAgd2hpbGUgKGNzc1RleHQubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgbWF0Y2ggPSB0b2tlbnMuZXhlYyhjc3NUZXh0KTtcbiAgICAgICAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBjaGFyID0gbWF0Y2hbMF07XG4gICAgICAgICAgICB2YXIgaWdub3JlQ2hhciA9IGZhbHNlO1xuICAgICAgICAgICAgc3dpdGNoIChjaGFyKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnLCc6XG4gICAgICAgICAgICAgICAgICAgIGlmICghcGFyZW5zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbWFnZXMucHVzaChidWZmZXIudHJpbSgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZmZlciA9ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWdub3JlQ2hhciA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnKCc6XG4gICAgICAgICAgICAgICAgICAgIHBhcmVucysrO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICcpJzpcbiAgICAgICAgICAgICAgICAgICAgcGFyZW5zLS07XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgaW5kZXggPSBtYXRjaC5pbmRleCArIDE7XG4gICAgICAgICAgICBidWZmZXIgKz0gY3NzVGV4dC5zbGljZSgwLCBpZ25vcmVDaGFyID8gaW5kZXggLSAxIDogaW5kZXgpO1xuICAgICAgICAgICAgY3NzVGV4dCA9IGNzc1RleHQuc2xpY2UoaW5kZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGJ1ZmZlci5sZW5ndGggfHwgY3NzVGV4dC5sZW5ndGgpIHtcbiAgICAgICAgICAgIGltYWdlcy5wdXNoKChidWZmZXIgKyBjc3NUZXh0KS50cmltKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGltYWdlcztcbiAgICB9XG5cbiAgICAvLyBIZWxwZXIgZm9yIC5tYXAoKVxuICAgIGZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gICAgICAgIHJldHVybiBzdHIudHJpbSgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHBhcnNlU2ltcGxlTGlzdChjc3NUZXh0KSB7XG4gICAgICAgIHJldHVybiAoY3NzVGV4dCB8fCAnJykuc3BsaXQoJywnKS5tYXAodHJpbSk7XG4gICAgfVxuXG4gICAgZXhwb3J0cy5wYXJzZUVsZW1lbnRTdHlsZSA9IGZ1bmN0aW9uIChzdHlsZU9iamVjdCkge1xuICAgICAgICB2YXIgbGlzdCA9IG5ldyBCYWNrZ3JvdW5kTGlzdCgpO1xuICAgICAgICBpZiAoc3R5bGVPYmplY3QgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGxpc3Q7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYmdJbWFnZSA9IHBhcnNlSW1hZ2VzKHN0eWxlT2JqZWN0LmJhY2tncm91bmRJbWFnZSk7XG4gICAgICAgIHZhciBiZ0NvbG9yID0gc3R5bGVPYmplY3QuYmFja2dyb3VuZENvbG9yO1xuICAgICAgICB2YXIgYmdBdHRhY2htZW50ID0gcGFyc2VTaW1wbGVMaXN0KHN0eWxlT2JqZWN0LmJhY2tncm91bmRBdHRhY2htZW50KTtcbiAgICAgICAgdmFyIGJnQ2xpcCAgICAgICA9IHBhcnNlU2ltcGxlTGlzdChzdHlsZU9iamVjdC5iYWNrZ3JvdW5kQ2xpcCk7XG4gICAgICAgIHZhciBiZ09yaWdpbiAgICAgPSBwYXJzZVNpbXBsZUxpc3Qoc3R5bGVPYmplY3QuYmFja2dyb3VuZE9yaWdpbik7XG4gICAgICAgIHZhciBiZ1Bvc2l0aW9uICAgPSBwYXJzZVNpbXBsZUxpc3Qoc3R5bGVPYmplY3QuYmFja2dyb3VuZFBvc2l0aW9uKTtcbiAgICAgICAgdmFyIGJnUmVwZWF0ICAgICA9IHBhcnNlU2ltcGxlTGlzdChzdHlsZU9iamVjdC5iYWNrZ3JvdW5kUmVwZWF0KTtcbiAgICAgICAgdmFyIGJnU2l6ZSAgICAgICA9IHBhcnNlU2ltcGxlTGlzdChzdHlsZU9iamVjdC5iYWNrZ3JvdW5kU2l6ZSk7XG4gICAgICAgIHZhciBiYWNrZ3JvdW5kO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBpaSA9IGJnSW1hZ2UubGVuZ3RoOyBpIDwgaWk7IGkrKykge1xuICAgICAgICAgICAgYmFja2dyb3VuZCA9IG5ldyBCYWNrZ3JvdW5kKHtcbiAgICAgICAgICAgICAgICBpbWFnZTogICAgICBiZ0ltYWdlW2ldLFxuICAgICAgICAgICAgICAgIGF0dGFjaG1lbnQ6IGJnQXR0YWNobWVudFtpICUgYmdBdHRhY2htZW50Lmxlbmd0aF0sXG4gICAgICAgICAgICAgICAgY2xpcDogICAgICAgYmdDbGlwW2kgJSBiZ0NsaXAubGVuZ3RoXSxcbiAgICAgICAgICAgICAgICBvcmlnaW46ICAgICBiZ09yaWdpbltpICUgYmdPcmlnaW4ubGVuZ3RoXSxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogICBiZ1Bvc2l0aW9uW2kgJSBiZ1Bvc2l0aW9uLmxlbmd0aF0sXG4gICAgICAgICAgICAgICAgcmVwZWF0OiAgICAgYmdSZXBlYXRbaSAlIGJnUmVwZWF0Lmxlbmd0aF0sXG4gICAgICAgICAgICAgICAgc2l6ZTogICAgICAgYmdTaXplW2kgJSBiZ1NpemUubGVuZ3RoXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoaSA9PT0gaWkgLSAxKSB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC5jb2xvciA9IGJnQ29sb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsaXN0LmJhY2tncm91bmRzLnB1c2goYmFja2dyb3VuZCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbGlzdDtcbiAgICB9O1xuXG4gICAgLy8gZXhwb3J0cy5wYXJzZUNzc1N0cmluZyA9IGZ1bmN0aW9uIChjc3NTdHJpbmcpIHtcbiAgICAvLyAgICAgcmV0dXJuIG5ldyBCYWNrZ3JvdW5kKCk7XG4gICAgLy8gfTtcblxuICAgIC8vIGV4cG9ydHMucGFyc2VCYWNrZ3JvdW5kVmFsdWUgPSBmdW5jdGlvbiAoY3NzU3RyaW5nKSB7XG4gICAgLy8gICAgIHJldHVybiBuZXcgQmFja2dyb3VuZCgpO1xuICAgIC8vIH07XG5cbn0pKChmdW5jdGlvbiAocm9vdCkge1xuICAgIC8vIENvbW1vbkpTXG4gICAgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzICE9PSB1bmRlZmluZWQpIHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiAgICAvLyBHbG9iYWwgYGNzc0JnUGFyc2VyYFxuICAgIHJldHVybiAocm9vdC5jc3NCZ1BhcnNlciA9IHt9KTtcbn0pKHRoaXMpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/css-background-parser/index.js\n");

/***/ })

};
;