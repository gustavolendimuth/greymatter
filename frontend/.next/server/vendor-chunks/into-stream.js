"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/into-stream";
exports.ids = ["vendor-chunks/into-stream"];
exports.modules = {

/***/ "(ssr)/./node_modules/into-stream/index.js":
/*!*******************************************!*\
  !*** ./node_modules/into-stream/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst from = __webpack_require__(/*! from2 */ \"(ssr)/./node_modules/from2/index.js\");\nconst pIsPromise = __webpack_require__(/*! p-is-promise */ \"(ssr)/./node_modules/p-is-promise/index.js\");\n\nconst intoStream = input => {\n\tif (Array.isArray(input)) {\n\t\tinput = input.slice();\n\t}\n\n\tlet promise;\n\tlet iterator;\n\tlet asyncIterator;\n\n\tprepare(input);\n\n\tfunction prepare(value) {\n\t\tinput = value;\n\n\t\tif (\n\t\t\tinput instanceof ArrayBuffer ||\n\t\t\t(ArrayBuffer.isView(input) && !Buffer.isBuffer(input))\n\t\t) {\n\t\t\tinput = Buffer.from(input);\n\t\t}\n\n\t\tpromise = pIsPromise(input) ? input : null;\n\n\t\t// We don't iterate on strings and buffers since slicing them is ~7x faster\n\t\tconst shouldIterate = !promise && input[Symbol.iterator] && typeof input !== 'string' && !Buffer.isBuffer(input);\n\t\titerator = shouldIterate ? input[Symbol.iterator]() : null;\n\n\t\tconst shouldAsyncIterate = !promise && input[Symbol.asyncIterator];\n\t\tasyncIterator = shouldAsyncIterate ? input[Symbol.asyncIterator]() : null;\n\t}\n\n\treturn from(function reader(size, callback) {\n\t\tif (promise) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait prepare(await promise);\n\t\t\t\t\treader.call(this, size, callback);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcallback(error);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (iterator) {\n\t\t\tconst object = iterator.next();\n\t\t\tsetImmediate(callback, null, object.done ? null : object.value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (asyncIterator) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst object = await asyncIterator.next();\n\t\t\t\t\tsetImmediate(callback, null, object.done ? null : object.value);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetImmediate(callback, error);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (input.length === 0) {\n\t\t\tsetImmediate(callback, null, null);\n\t\t\treturn;\n\t\t}\n\n\t\tconst chunk = input.slice(0, size);\n\t\tinput = input.slice(size);\n\n\t\tsetImmediate(callback, null, chunk);\n\t});\n};\n\nmodule.exports = intoStream;\n\nmodule.exports.object = input => {\n\tif (Array.isArray(input)) {\n\t\tinput = input.slice();\n\t}\n\n\tlet promise;\n\tlet iterator;\n\tlet asyncIterator;\n\n\tprepare(input);\n\n\tfunction prepare(value) {\n\t\tinput = value;\n\t\tpromise = pIsPromise(input) ? input : null;\n\t\titerator = !promise && input[Symbol.iterator] ? input[Symbol.iterator]() : null;\n\t\tasyncIterator = !promise && input[Symbol.asyncIterator] ? input[Symbol.asyncIterator]() : null;\n\t}\n\n\treturn from.obj(function reader(size, callback) {\n\t\tif (promise) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait prepare(await promise);\n\t\t\t\t\treader.call(this, size, callback);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcallback(error);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (iterator) {\n\t\t\tconst object = iterator.next();\n\t\t\tsetImmediate(callback, null, object.done ? null : object.value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (asyncIterator) {\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst object = await asyncIterator.next();\n\t\t\t\t\tsetImmediate(callback, null, object.done ? null : object.value);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetImmediate(callback, error);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.push(input);\n\n\t\tsetImmediate(callback, null, null);\n\t});\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvaW50by1zdHJlYW0vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixhQUFhLG1CQUFPLENBQUMsa0RBQU87QUFDNUIsbUJBQW1CLG1CQUFPLENBQUMsZ0VBQWM7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7O0FBRUEscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBOztBQUVBOztBQUVBO0FBQ0EsRUFBRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3JleW1hdHRlci12Mi8uL25vZGVfbW9kdWxlcy9pbnRvLXN0cmVhbS9pbmRleC5qcz8yMGNlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IGZyb20gPSByZXF1aXJlKCdmcm9tMicpO1xuY29uc3QgcElzUHJvbWlzZSA9IHJlcXVpcmUoJ3AtaXMtcHJvbWlzZScpO1xuXG5jb25zdCBpbnRvU3RyZWFtID0gaW5wdXQgPT4ge1xuXHRpZiAoQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcblx0XHRpbnB1dCA9IGlucHV0LnNsaWNlKCk7XG5cdH1cblxuXHRsZXQgcHJvbWlzZTtcblx0bGV0IGl0ZXJhdG9yO1xuXHRsZXQgYXN5bmNJdGVyYXRvcjtcblxuXHRwcmVwYXJlKGlucHV0KTtcblxuXHRmdW5jdGlvbiBwcmVwYXJlKHZhbHVlKSB7XG5cdFx0aW5wdXQgPSB2YWx1ZTtcblxuXHRcdGlmIChcblx0XHRcdGlucHV0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgfHxcblx0XHRcdChBcnJheUJ1ZmZlci5pc1ZpZXcoaW5wdXQpICYmICFCdWZmZXIuaXNCdWZmZXIoaW5wdXQpKVxuXHRcdCkge1xuXHRcdFx0aW5wdXQgPSBCdWZmZXIuZnJvbShpbnB1dCk7XG5cdFx0fVxuXG5cdFx0cHJvbWlzZSA9IHBJc1Byb21pc2UoaW5wdXQpID8gaW5wdXQgOiBudWxsO1xuXG5cdFx0Ly8gV2UgZG9uJ3QgaXRlcmF0ZSBvbiBzdHJpbmdzIGFuZCBidWZmZXJzIHNpbmNlIHNsaWNpbmcgdGhlbSBpcyB+N3ggZmFzdGVyXG5cdFx0Y29uc3Qgc2hvdWxkSXRlcmF0ZSA9ICFwcm9taXNlICYmIGlucHV0W1N5bWJvbC5pdGVyYXRvcl0gJiYgdHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJyAmJiAhQnVmZmVyLmlzQnVmZmVyKGlucHV0KTtcblx0XHRpdGVyYXRvciA9IHNob3VsZEl0ZXJhdGUgPyBpbnB1dFtTeW1ib2wuaXRlcmF0b3JdKCkgOiBudWxsO1xuXG5cdFx0Y29uc3Qgc2hvdWxkQXN5bmNJdGVyYXRlID0gIXByb21pc2UgJiYgaW5wdXRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdO1xuXHRcdGFzeW5jSXRlcmF0b3IgPSBzaG91bGRBc3luY0l0ZXJhdGUgPyBpbnB1dFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSA6IG51bGw7XG5cdH1cblxuXHRyZXR1cm4gZnJvbShmdW5jdGlvbiByZWFkZXIoc2l6ZSwgY2FsbGJhY2spIHtcblx0XHRpZiAocHJvbWlzZSkge1xuXHRcdFx0KGFzeW5jICgpID0+IHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRhd2FpdCBwcmVwYXJlKGF3YWl0IHByb21pc2UpO1xuXHRcdFx0XHRcdHJlYWRlci5jYWxsKHRoaXMsIHNpemUsIGNhbGxiYWNrKTtcblx0XHRcdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdFx0XHRjYWxsYmFjayhlcnJvcik7XG5cdFx0XHRcdH1cblx0XHRcdH0pKCk7XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoaXRlcmF0b3IpIHtcblx0XHRcdGNvbnN0IG9iamVjdCA9IGl0ZXJhdG9yLm5leHQoKTtcblx0XHRcdHNldEltbWVkaWF0ZShjYWxsYmFjaywgbnVsbCwgb2JqZWN0LmRvbmUgPyBudWxsIDogb2JqZWN0LnZhbHVlKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoYXN5bmNJdGVyYXRvcikge1xuXHRcdFx0KGFzeW5jICgpID0+IHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRjb25zdCBvYmplY3QgPSBhd2FpdCBhc3luY0l0ZXJhdG9yLm5leHQoKTtcblx0XHRcdFx0XHRzZXRJbW1lZGlhdGUoY2FsbGJhY2ssIG51bGwsIG9iamVjdC5kb25lID8gbnVsbCA6IG9iamVjdC52YWx1ZSk7XG5cdFx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdFx0c2V0SW1tZWRpYXRlKGNhbGxiYWNrLCBlcnJvcik7XG5cdFx0XHRcdH1cblx0XHRcdH0pKCk7XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoaW5wdXQubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRzZXRJbW1lZGlhdGUoY2FsbGJhY2ssIG51bGwsIG51bGwpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnN0IGNodW5rID0gaW5wdXQuc2xpY2UoMCwgc2l6ZSk7XG5cdFx0aW5wdXQgPSBpbnB1dC5zbGljZShzaXplKTtcblxuXHRcdHNldEltbWVkaWF0ZShjYWxsYmFjaywgbnVsbCwgY2h1bmspO1xuXHR9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW50b1N0cmVhbTtcblxubW9kdWxlLmV4cG9ydHMub2JqZWN0ID0gaW5wdXQgPT4ge1xuXHRpZiAoQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcblx0XHRpbnB1dCA9IGlucHV0LnNsaWNlKCk7XG5cdH1cblxuXHRsZXQgcHJvbWlzZTtcblx0bGV0IGl0ZXJhdG9yO1xuXHRsZXQgYXN5bmNJdGVyYXRvcjtcblxuXHRwcmVwYXJlKGlucHV0KTtcblxuXHRmdW5jdGlvbiBwcmVwYXJlKHZhbHVlKSB7XG5cdFx0aW5wdXQgPSB2YWx1ZTtcblx0XHRwcm9taXNlID0gcElzUHJvbWlzZShpbnB1dCkgPyBpbnB1dCA6IG51bGw7XG5cdFx0aXRlcmF0b3IgPSAhcHJvbWlzZSAmJiBpbnB1dFtTeW1ib2wuaXRlcmF0b3JdID8gaW5wdXRbU3ltYm9sLml0ZXJhdG9yXSgpIDogbnVsbDtcblx0XHRhc3luY0l0ZXJhdG9yID0gIXByb21pc2UgJiYgaW5wdXRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdID8gaW5wdXRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkgOiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIGZyb20ub2JqKGZ1bmN0aW9uIHJlYWRlcihzaXplLCBjYWxsYmFjaykge1xuXHRcdGlmIChwcm9taXNlKSB7XG5cdFx0XHQoYXN5bmMgKCkgPT4ge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGF3YWl0IHByZXBhcmUoYXdhaXQgcHJvbWlzZSk7XG5cdFx0XHRcdFx0cmVhZGVyLmNhbGwodGhpcywgc2l6ZSwgY2FsbGJhY2spO1xuXHRcdFx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0XHRcdGNhbGxiYWNrKGVycm9yKTtcblx0XHRcdFx0fVxuXHRcdFx0fSkoKTtcblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChpdGVyYXRvcikge1xuXHRcdFx0Y29uc3Qgb2JqZWN0ID0gaXRlcmF0b3IubmV4dCgpO1xuXHRcdFx0c2V0SW1tZWRpYXRlKGNhbGxiYWNrLCBudWxsLCBvYmplY3QuZG9uZSA/IG51bGwgOiBvYmplY3QudmFsdWUpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChhc3luY0l0ZXJhdG9yKSB7XG5cdFx0XHQoYXN5bmMgKCkgPT4ge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGNvbnN0IG9iamVjdCA9IGF3YWl0IGFzeW5jSXRlcmF0b3IubmV4dCgpO1xuXHRcdFx0XHRcdHNldEltbWVkaWF0ZShjYWxsYmFjaywgbnVsbCwgb2JqZWN0LmRvbmUgPyBudWxsIDogb2JqZWN0LnZhbHVlKTtcblx0XHRcdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdFx0XHRzZXRJbW1lZGlhdGUoY2FsbGJhY2ssIGVycm9yKTtcblx0XHRcdFx0fVxuXHRcdFx0fSkoKTtcblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoaXMucHVzaChpbnB1dCk7XG5cblx0XHRzZXRJbW1lZGlhdGUoY2FsbGJhY2ssIG51bGwsIG51bGwpO1xuXHR9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/into-stream/index.js\n");

/***/ })

};
;